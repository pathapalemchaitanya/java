import java.math.BigInteger;
import java.util.Scanner;
public class LCMAndGCD {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        System.out.print("Enter the number of elements: ");
        int n = scanner.nextInt();
        int[] numbers = new int[n];
        System.out.println("Enter the numbers:");
        for (int i = 0; i < n; i++) {
            numbers[i] = scanner.nextInt();
        }
        BigInteger lcm = calculateLCM(numbers);
        System.out.println("LCM of the numbers: " + lcm);
        BigInteger gcd = calculateGCD(numbers);
        System.out.println("GCD of the numbers: " + gcd);
    }
    private static BigInteger calculateLCM(int[] numbers) {
        BigInteger lcm = BigInteger.valueOf(numbers[0]);
        for (int i = 1; i < numbers.length; i++) {
            BigInteger currentNumber = BigInteger.valueOf(numbers[i]);
            lcm = lcm.multiply(currentNumber).divide(lcm.gcd(currentNumber));
        }
        return lcm;
    }
    private static BigInteger calculateGCD(int[] numbers) {
        BigInteger gcd = BigInteger.valueOf(numbers[0]);
        for (int i = 1; i < numbers.length; i++) {
            gcd = gcd.gcd(BigInteger.valueOf(numbers[i]));
        }
        return gcd;
    }
}
